{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[],"dockerImageVersionId":30699,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!pip install datasets -q","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-04-28T05:32:26.518653Z","iopub.execute_input":"2024-04-28T05:32:26.519398Z","iopub.status.idle":"2024-04-28T05:32:40.834739Z","shell.execute_reply.started":"2024-04-28T05:32:26.519364Z","shell.execute_reply":"2024-04-28T05:32:40.833435Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\n\nfrom sklearn import *\n\nfrom datasets import load_dataset","metadata":{"execution":{"iopub.status.busy":"2024-04-28T06:01:36.802131Z","iopub.execute_input":"2024-04-28T06:01:36.802525Z","iopub.status.idle":"2024-04-28T06:01:37.466420Z","shell.execute_reply.started":"2024-04-28T06:01:36.802498Z","shell.execute_reply":"2024-04-28T06:01:37.465534Z"},"trusted":true},"execution_count":48,"outputs":[]},{"cell_type":"code","source":"dataset = load_dataset(\"BAAI/TACO\")","metadata":{"execution":{"iopub.status.busy":"2024-04-28T05:32:40.836929Z","iopub.execute_input":"2024-04-28T05:32:40.837298Z","iopub.status.idle":"2024-04-28T05:35:05.669525Z","shell.execute_reply.started":"2024-04-28T05:32:40.837266Z","shell.execute_reply":"2024-04-28T05:35:05.668560Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/datasets/load.py:1461: FutureWarning: The repository for BAAI/TACO contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/BAAI/TACO\nYou can avoid this message in future by passing the argument `trust_remote_code=True`.\nPassing `trust_remote_code=True` will be mandatory to load this dataset from the next major release of `datasets`.\n  warnings.warn(\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Downloading builder script:   0%|          | 0.00/6.00k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"516eb5c7d565474bb6a056239bb8bfc0"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading readme:   0%|          | 0.00/12.2k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"fd5f8ac12ba74d92b224ac9e71740ecc"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading data:   0%|          | 0.00/530M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"30e3a0d9c2204af1b01370e1db899e7d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading data:   0%|          | 0.00/613M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8ab45768926e4754b3d8190b8ee90087"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading data:   0%|          | 0.00/335M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"82ba76da701c45319d88ad6b6d83a67e"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading data:   0%|          | 0.00/403M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d721e89dc8a541d19f03566f02116b90"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading data:   0%|          | 0.00/417M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a238ab095af74adc9a751998d8ed775b"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading data:   0%|          | 0.00/503M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8487b89257894901aa77ede9105d4acb"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading data:   0%|          | 0.00/447M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"20893ce200fe40c1903fb6129d29ce30"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading data:   0%|          | 0.00/526M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"17c6e7cd8d5c4a8499253387aca811f2"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading data:   0%|          | 0.00/466M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"acfb255c1726423c8590a38e17d51ba8"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading data:   0%|          | 0.00/481M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0d36296050094b4bba14c0d23098b1aa"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating train split:   0%|          | 0/25443 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"fcef3495f1424e99835f5860c0fa19d5"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating test split:   0%|          | 0/1000 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2f8e8fa098f54b4fa2080b9601db181c"}},"metadata":{}}]},{"cell_type":"code","source":"sample = next(iter(dataset['train']))","metadata":{"execution":{"iopub.status.busy":"2024-04-28T05:50:58.637441Z","iopub.execute_input":"2024-04-28T05:50:58.638368Z","iopub.status.idle":"2024-04-28T05:50:58.643130Z","shell.execute_reply.started":"2024-04-28T05:50:58.638333Z","shell.execute_reply":"2024-04-28T05:50:58.642169Z"},"trusted":true},"execution_count":34,"outputs":[]},{"cell_type":"code","source":"print(f'Keys: {list(sample.keys())}')\nprint(f\"Count of Keys: {len(sample.keys())}\")","metadata":{"execution":{"iopub.status.busy":"2024-04-28T05:50:58.810421Z","iopub.execute_input":"2024-04-28T05:50:58.810739Z","iopub.status.idle":"2024-04-28T05:50:58.815932Z","shell.execute_reply.started":"2024-04-28T05:50:58.810712Z","shell.execute_reply":"2024-04-28T05:50:58.814968Z"},"trusted":true},"execution_count":35,"outputs":[{"name":"stdout","text":"Keys: ['question', 'solutions', 'starter_code', 'input_output', 'difficulty', 'raw_tags', 'name', 'source', 'tags', 'skill_types', 'url', 'Expected Auxiliary Space', 'time_limit', 'date', 'picture_num', 'memory_limit', 'Expected Time Complexity']\nCount of Keys: 17\n","output_type":"stream"}]},{"cell_type":"code","source":"print(sample['question'])","metadata":{"execution":{"iopub.status.busy":"2024-04-28T05:50:58.968723Z","iopub.execute_input":"2024-04-28T05:50:58.968987Z","iopub.status.idle":"2024-04-28T05:50:58.973727Z","shell.execute_reply.started":"2024-04-28T05:50:58.968965Z","shell.execute_reply":"2024-04-28T05:50:58.972739Z"},"trusted":true},"execution_count":36,"outputs":[{"name":"stdout","text":"This is an interactive problem.\n\nIn good old times dwarves tried to develop extrasensory abilities:\n\n  * Exactly n dwarves entered completely dark cave. \n  * Each dwarf received a hat — white or black. While in cave, none of the dwarves was able to see either his own hat or hats of other Dwarves. \n  * Dwarves went out of the cave to the meadow and sat at an arbitrary place one after the other. When a dwarf leaves the cave, he sees the colors of all hats of all dwarves that are seating on the meadow (i.e. left the cave before him). However, he is not able to see the color of his own hat and none of the dwarves can give him this information. \n  * The task for dwarves was to got diverged into two parts — one with dwarves with white hats and one with black hats. \n\n\n\nAfter many centuries, dwarves finally managed to select the right place on the meadow without error. Will you be able to repeat their success?\n\nYou are asked to successively name n different integer points on the plane. After naming each new point you will be given its color — black or white. Your task is to ensure that the named points can be split by a line in such a way that all points of one color lie on the same side from the line and points of different colors lie on different sides. Moreover, no points can belong to the line. Also, you need to report any such line at the end of the process.\n\nIn this problem, the interactor is adaptive — the colors of the points in the tests are not fixed beforehand and the jury program can select them arbitrarily, in particular, depending on your program output.\n\nInteraction\n\nThe first line of the standard input stream contains an integer n (1 ≤ n ≤ 30) — the number of points your program should name.\n\nThen n times your program must print two integer coordinates x and y (0 ≤ x ≤ 109, 0 ≤ y ≤ 109). All points you print must be distinct.\n\nIn response to each coordinate pair your program will receive the string \"black\", if the point is black, or \"white\", if the point is white.\n\nWhen all n points are processed, you need to print four integers x1, y1, x2 and y2 (0 ≤ x1, y1 ≤ 109, 0 ≤ x2, y2 ≤ 109) — coordinates of points (x1, y1) and (x2, y2), which form a line, which separates n points into black and white. Points (x1, y1) and (x2, y2) should not coincide.\n\nHacks\n\nTo hack solution use the following format. The first line must contain word \"hack\", the second line should contain the number n and the last line should contain the sequence of 0 and 1 — colors of points, which will be reported to the solution. Unlike the jury tests, colors of points in hacks are always fixed in advance. Of course, the hacked solution wouldn't be able to get the information about the colors in advance.\n\nFor example, the hack corresponding to sample test will look like this: \n    \n    \n      \n    hack  \n    5  \n    0 0 1 1 0  \n    \n\nExample\n\nInput\n\n5\n<span class=\"tex-span\"></span>\nblack\n<span class=\"tex-span\"></span>\nblack\n<span class=\"tex-span\"></span>\nwhite\n<span class=\"tex-span\"></span>\nwhite\n<span class=\"tex-span\"></span>\nblack\n\n\nOutput\n\n<span class=\"tex-span\"></span>\n0 0\n<span class=\"tex-span\"></span>\n3 1\n<span class=\"tex-span\"></span>\n2 3\n<span class=\"tex-span\"></span>\n4 4\n<span class=\"tex-span\"></span>\n0 2\n<span class=\"tex-span\"></span>\n1 3 4 1\n\nNote\n\nIn the sample input and output values are aligned only for simplicity of interpreting them chronologically. In real interaction no \"extra\" line breaks should appear.\n\nThe following picture illustrates the first test.\n\n<image>\n","output_type":"stream"}]},{"cell_type":"code","source":"sample['solutions']","metadata":{"execution":{"iopub.status.busy":"2024-04-28T05:57:49.211242Z","iopub.execute_input":"2024-04-28T05:57:49.212083Z","iopub.status.idle":"2024-04-28T05:57:49.217718Z","shell.execute_reply.started":"2024-04-28T05:57:49.212048Z","shell.execute_reply":"2024-04-28T05:57:49.216754Z"},"trusted":true},"execution_count":38,"outputs":[{"execution_count":38,"output_type":"execute_result","data":{"text/plain":"'[]'"},"metadata":{}}]},{"cell_type":"code","source":"trainData = dataset['train'].to_pandas()\ntestData = dataset['test'].to_pandas()","metadata":{"execution":{"iopub.status.busy":"2024-04-28T06:00:34.639587Z","iopub.execute_input":"2024-04-28T06:00:34.639955Z","iopub.status.idle":"2024-04-28T06:00:39.030580Z","shell.execute_reply.started":"2024-04-28T06:00:34.639929Z","shell.execute_reply":"2024-04-28T06:00:39.029481Z"},"trusted":true},"execution_count":47,"outputs":[]},{"cell_type":"code","source":"trainData","metadata":{"execution":{"iopub.status.busy":"2024-04-28T05:59:29.887273Z","iopub.execute_input":"2024-04-28T05:59:29.887904Z","iopub.status.idle":"2024-04-28T05:59:29.921732Z","shell.execute_reply.started":"2024-04-28T05:59:29.887872Z","shell.execute_reply":"2024-04-28T05:59:29.920762Z"},"trusted":true},"execution_count":44,"outputs":[{"execution_count":44,"output_type":"execute_result","data":{"text/plain":"                                                question  \\\n0      This is an interactive problem.\\n\\nIn good old...   \n1      There are $n$ candy boxes in front of Tania. T...   \n2      Little Petya likes to play a lot. Most of all ...   \n3      If you visit Aizu Akabeko shrine, you will fin...   \n4      You have a deck of $n$ cards, and you'd like t...   \n...                                                  ...   \n25438  The manager of the Japanese sweets shop Tomogu...   \n25439  Your game development studio, Ad Hoc Entertain...   \n25440  #Sorting on planet Twisted-3-7\\n\\nThere is a p...   \n25441  Optimistan is a strange country. It is situate...   \n25442  One day Polycarpus got hold of two non-empty s...   \n\n                                               solutions  \\\n0                                                     []   \n1      [\"INF = 10000000000.0\\nmax_n = 50\\nmax_k = 200...   \n2                                                     []   \n3      [\"def sub(maxs, mins):\\n\\tfor i in range(len(m...   \n4      [\"import heapq\\nfrom math import sqrt\\nimport ...   \n...                                                  ...   \n25438                                                 []   \n25439                                                 []   \n25440  [\"def sort_twisted37(arr):\\n\\n\\tdef key(x):\\n\\...   \n25441                                                 []   \n25442  [\"from sys import stdin\\ns = [ord(i) - 97 for ...   \n\n                       starter_code  \\\n0                                     \n1                                     \n2                                     \n3                                     \n4                                     \n...                             ...   \n25438                                 \n25439                                 \n25440  def sort_twisted37(arr):\\n\\t   \n25441                                 \n25442                                 \n\n                                            input_output          difficulty  \\\n0      {\"inputs\": [\"hack\\n30\\n1 0 1 1 1 1 1 1 1 1 1 1...                HARD   \n1      {\"inputs\": [\"5 3 10\\n1 2 3 4 5\\nRGBRR\\n\", \"2 1...                HARD   \n2      {\"inputs\": [\"10 10\\n5 1 2 4 1 7 3 8 10 8\\n0 5 ...           VERY_HARD   \n3      {\"inputs\": [\"9714431\", \"16612328\", \"23422731\",...  UNKNOWN_DIFFICULTY   \n4      {\"inputs\": [\"4\\n4\\n1 2 3 4\\n5\\n1 5 2 4 3\\n6\\n4...                EASY   \n...                                                  ...                 ...   \n25438  {\"inputs\": [\"5\\n4 9 1 3 8\\n10\\n8 5 3 6 2 1 4 5...  UNKNOWN_DIFFICULTY   \n25439  {\"inputs\": [\"20 30\\n2 10 20 2 24 18 28 10\\n\", ...                HARD   \n25440  {\"fn_name\": \"sort_twisted37\", \"inputs\": [[[1, ...                EASY   \n25441  {\"inputs\": [\"3\\n4 4\\n2\\n\", \"4\\n2 2 2\\n2 2\\n2\\n...                HARD   \n25442  {\"inputs\": [\"bbabb\\nbababbbbab\\n\", \"ab\\nbbbba\\...         MEDIUM_HARD   \n\n                                                raw_tags  name      source  \\\n0      ['interactive', 'binary search', 'geometry', '...  None  codeforces   \n1                                                 ['dp']  None  codeforces   \n2                             ['data structures', 'dsu']  None  codeforces   \n3                                                     []  None        aizu   \n4                  ['data structures', 'greedy', 'math']  None  codeforces   \n...                                                  ...   ...         ...   \n25438                                                 []  None        aizu   \n25439                                                 []  None      kattis   \n25440  ['Mathematics', 'Arrays', 'Algorithms', 'Sorti...  None    codewars   \n25441                                                 []  None      kattis   \n25442                                             ['dp']  None  codeforces   \n\n                                                    tags  \\\n0      ['Geometry', 'Sorting', 'Constructive algorith...   \n1                                ['Dynamic programming']   \n2                  ['Spanning trees', 'Data structures']   \n3                                                     []   \n4      ['Data structures', 'Mathematics', 'Greedy alg...   \n...                                                  ...   \n25438                                                 []   \n25439                                                 []   \n25440      ['Sorting', 'Data structures', 'Mathematics']   \n25441                                                 []   \n25442                            ['Dynamic programming']   \n\n                                    skill_types  \\\n0                                   ['Sorting']   \n1                       ['Dynamic programming']   \n2                           ['Data structures']   \n3                                            []   \n4      ['Data structures', 'Greedy algorithms']   \n...                                         ...   \n25438                                        []   \n25439                                        []   \n25440            ['Sorting', 'Data structures']   \n25441                                        []   \n25442                   ['Dynamic programming']   \n\n                                                     url  \\\n0       https://codeforces.com/problemset/problem/1063/C   \n1       https://codeforces.com/problemset/problem/1057/C   \n2         https://codeforces.com/problemset/problem/13/E   \n3                                                   None   \n4       https://codeforces.com/problemset/problem/1492/B   \n...                                                  ...   \n25438                                               None   \n25439         https://open.kattis.com/problems/trickshot   \n25440  https://www.codewars.com/kata/58068479c27998b1...   \n25441        https://open.kattis.com/problems/optimistan   \n25442    https://codeforces.com/problemset/problem/163/A   \n\n      Expected Auxiliary Space   time_limit        date picture_num  \\\n0                         None  2.0 seconds        None        None   \n1                         None         None  2019-12-31        None   \n2                         None  1.0 seconds        None        None   \n3                         None  1.0 seconds        None        None   \n4                         None     1 second  2021-02-23           0   \n...                        ...          ...         ...         ...   \n25438                     None  8.0 seconds        None        None   \n25439                     None         None        None        None   \n25440                     None         None        None        None   \n25441                     None         None        None        None   \n25442                     None  2.0 seconds        None        None   \n\n               memory_limit Expected Time Complexity  \n0           256.0 megabytes                     None  \n1                      None                     None  \n2            64.0 megabytes                     None  \n3      268.435456 megabytes                     None  \n4             512 megabytes                     None  \n...                     ...                      ...  \n25438  134.217728 megabytes                     None  \n25439                  None                     None  \n25440                  None                     None  \n25441                  None                     None  \n25442       256.0 megabytes                     None  \n\n[25443 rows x 17 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>question</th>\n      <th>solutions</th>\n      <th>starter_code</th>\n      <th>input_output</th>\n      <th>difficulty</th>\n      <th>raw_tags</th>\n      <th>name</th>\n      <th>source</th>\n      <th>tags</th>\n      <th>skill_types</th>\n      <th>url</th>\n      <th>Expected Auxiliary Space</th>\n      <th>time_limit</th>\n      <th>date</th>\n      <th>picture_num</th>\n      <th>memory_limit</th>\n      <th>Expected Time Complexity</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>This is an interactive problem.\\n\\nIn good old...</td>\n      <td>[]</td>\n      <td></td>\n      <td>{\"inputs\": [\"hack\\n30\\n1 0 1 1 1 1 1 1 1 1 1 1...</td>\n      <td>HARD</td>\n      <td>['interactive', 'binary search', 'geometry', '...</td>\n      <td>None</td>\n      <td>codeforces</td>\n      <td>['Geometry', 'Sorting', 'Constructive algorith...</td>\n      <td>['Sorting']</td>\n      <td>https://codeforces.com/problemset/problem/1063/C</td>\n      <td>None</td>\n      <td>2.0 seconds</td>\n      <td>None</td>\n      <td>None</td>\n      <td>256.0 megabytes</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>There are $n$ candy boxes in front of Tania. T...</td>\n      <td>[\"INF = 10000000000.0\\nmax_n = 50\\nmax_k = 200...</td>\n      <td></td>\n      <td>{\"inputs\": [\"5 3 10\\n1 2 3 4 5\\nRGBRR\\n\", \"2 1...</td>\n      <td>HARD</td>\n      <td>['dp']</td>\n      <td>None</td>\n      <td>codeforces</td>\n      <td>['Dynamic programming']</td>\n      <td>['Dynamic programming']</td>\n      <td>https://codeforces.com/problemset/problem/1057/C</td>\n      <td>None</td>\n      <td>None</td>\n      <td>2019-12-31</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Little Petya likes to play a lot. Most of all ...</td>\n      <td>[]</td>\n      <td></td>\n      <td>{\"inputs\": [\"10 10\\n5 1 2 4 1 7 3 8 10 8\\n0 5 ...</td>\n      <td>VERY_HARD</td>\n      <td>['data structures', 'dsu']</td>\n      <td>None</td>\n      <td>codeforces</td>\n      <td>['Spanning trees', 'Data structures']</td>\n      <td>['Data structures']</td>\n      <td>https://codeforces.com/problemset/problem/13/E</td>\n      <td>None</td>\n      <td>1.0 seconds</td>\n      <td>None</td>\n      <td>None</td>\n      <td>64.0 megabytes</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>If you visit Aizu Akabeko shrine, you will fin...</td>\n      <td>[\"def sub(maxs, mins):\\n\\tfor i in range(len(m...</td>\n      <td></td>\n      <td>{\"inputs\": [\"9714431\", \"16612328\", \"23422731\",...</td>\n      <td>UNKNOWN_DIFFICULTY</td>\n      <td>[]</td>\n      <td>None</td>\n      <td>aizu</td>\n      <td>[]</td>\n      <td>[]</td>\n      <td>None</td>\n      <td>None</td>\n      <td>1.0 seconds</td>\n      <td>None</td>\n      <td>None</td>\n      <td>268.435456 megabytes</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>You have a deck of $n$ cards, and you'd like t...</td>\n      <td>[\"import heapq\\nfrom math import sqrt\\nimport ...</td>\n      <td></td>\n      <td>{\"inputs\": [\"4\\n4\\n1 2 3 4\\n5\\n1 5 2 4 3\\n6\\n4...</td>\n      <td>EASY</td>\n      <td>['data structures', 'greedy', 'math']</td>\n      <td>None</td>\n      <td>codeforces</td>\n      <td>['Data structures', 'Mathematics', 'Greedy alg...</td>\n      <td>['Data structures', 'Greedy algorithms']</td>\n      <td>https://codeforces.com/problemset/problem/1492/B</td>\n      <td>None</td>\n      <td>1 second</td>\n      <td>2021-02-23</td>\n      <td>0</td>\n      <td>512 megabytes</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>25438</th>\n      <td>The manager of the Japanese sweets shop Tomogu...</td>\n      <td>[]</td>\n      <td></td>\n      <td>{\"inputs\": [\"5\\n4 9 1 3 8\\n10\\n8 5 3 6 2 1 4 5...</td>\n      <td>UNKNOWN_DIFFICULTY</td>\n      <td>[]</td>\n      <td>None</td>\n      <td>aizu</td>\n      <td>[]</td>\n      <td>[]</td>\n      <td>None</td>\n      <td>None</td>\n      <td>8.0 seconds</td>\n      <td>None</td>\n      <td>None</td>\n      <td>134.217728 megabytes</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>25439</th>\n      <td>Your game development studio, Ad Hoc Entertain...</td>\n      <td>[]</td>\n      <td></td>\n      <td>{\"inputs\": [\"20 30\\n2 10 20 2 24 18 28 10\\n\", ...</td>\n      <td>HARD</td>\n      <td>[]</td>\n      <td>None</td>\n      <td>kattis</td>\n      <td>[]</td>\n      <td>[]</td>\n      <td>https://open.kattis.com/problems/trickshot</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>25440</th>\n      <td>#Sorting on planet Twisted-3-7\\n\\nThere is a p...</td>\n      <td>[\"def sort_twisted37(arr):\\n\\n\\tdef key(x):\\n\\...</td>\n      <td>def sort_twisted37(arr):\\n\\t</td>\n      <td>{\"fn_name\": \"sort_twisted37\", \"inputs\": [[[1, ...</td>\n      <td>EASY</td>\n      <td>['Mathematics', 'Arrays', 'Algorithms', 'Sorti...</td>\n      <td>None</td>\n      <td>codewars</td>\n      <td>['Sorting', 'Data structures', 'Mathematics']</td>\n      <td>['Sorting', 'Data structures']</td>\n      <td>https://www.codewars.com/kata/58068479c27998b1...</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>25441</th>\n      <td>Optimistan is a strange country. It is situate...</td>\n      <td>[]</td>\n      <td></td>\n      <td>{\"inputs\": [\"3\\n4 4\\n2\\n\", \"4\\n2 2 2\\n2 2\\n2\\n...</td>\n      <td>HARD</td>\n      <td>[]</td>\n      <td>None</td>\n      <td>kattis</td>\n      <td>[]</td>\n      <td>[]</td>\n      <td>https://open.kattis.com/problems/optimistan</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>25442</th>\n      <td>One day Polycarpus got hold of two non-empty s...</td>\n      <td>[\"from sys import stdin\\ns = [ord(i) - 97 for ...</td>\n      <td></td>\n      <td>{\"inputs\": [\"bbabb\\nbababbbbab\\n\", \"ab\\nbbbba\\...</td>\n      <td>MEDIUM_HARD</td>\n      <td>['dp']</td>\n      <td>None</td>\n      <td>codeforces</td>\n      <td>['Dynamic programming']</td>\n      <td>['Dynamic programming']</td>\n      <td>https://codeforces.com/problemset/problem/163/A</td>\n      <td>None</td>\n      <td>2.0 seconds</td>\n      <td>None</td>\n      <td>None</td>\n      <td>256.0 megabytes</td>\n      <td>None</td>\n    </tr>\n  </tbody>\n</table>\n<p>25443 rows × 17 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}